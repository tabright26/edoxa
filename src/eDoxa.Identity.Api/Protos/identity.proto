syntax = "proto3";

option csharp_namespace = "eDoxa.Identity.Grpc.Protos";

import "google/protobuf/any.proto";

service UserService {
  rpc AddUserClaim(AddUserClaimRequest) returns (AddUserClaimResponse);
  rpc ReplaceUserClaim(ReplaceUserClaimRequest) returns (ReplaceUserClaimResponse);
  rpc RemoveUserClaim(RemoveUserClaimRequest) returns (RemoveUserClaimResponse);
  rpc AddUserToRole(AddUserToRoleRequest) returns (AddUserToRoleResponse);
  rpc RemoveUserFromRole(RemoveUserFromRoleRequest) returns (RemoveUserFromRoleResponse);
}

message AddUserClaimRequest {
  string userId = 1;
  UserClaimDto claim = 2;
}

message AddUserClaimResponse {
  StatusDto status = 1;
  UserClaimDto claim = 2;
}

message ReplaceUserClaimRequest {
  string userId = 1;
  UserClaimDto claim = 2;
}

message ReplaceUserClaimResponse {
  StatusDto status = 1;
  UserClaimDto claim = 2;
}

message RemoveUserClaimRequest {
  string userId = 1;
  UserClaimDto claim = 2;
}

message RemoveUserClaimResponse {
  StatusDto status = 1;
  UserClaimDto claim = 2;
}

message AddUserToRoleRequest {
  string userId = 1;
  string roleName = 2;
}

message AddUserToRoleResponse {
  StatusDto status = 1;
  RoleDto role = 2;
}

message RemoveUserFromRoleRequest {
  string userId = 1;
  string roleName = 2;
}

message RemoveUserFromRoleResponse {
  StatusDto status = 1;
  RoleDto role = 2;
}

message UserClaimDto {
  string type = 1;
  string value = 2;
}

service RoleService {
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse);
  rpc AddRoleClaim(AddRoleClaimRequest) returns (AddRoleClaimResponse);
  rpc RemoveRoleClaim(RemoveRoleClaimRequest) returns (RemoveRoleClaimResponse);
}

message CreateRoleRequest {
  string roleName = 1;
}

message CreateRoleResponse {
  StatusDto status = 1;
  RoleDto role = 2;
}

message DeleteRoleRequest {
  string roleName = 1;
}

message DeleteRoleResponse {
  StatusDto status = 1;
  RoleDto role = 2;
}

message AddRoleClaimRequest {
  string roleName = 1;
  RoleClaimDto claim = 2;
}

message AddRoleClaimResponse {
  StatusDto status = 1;
  RoleClaimDto claim = 2;
}

message RemoveRoleClaimRequest {
  string roleName = 1;
  RoleClaimDto claim = 2;
}

message RemoveRoleClaimResponse {
  StatusDto status = 1;
  RoleClaimDto claim = 2;
}

message RoleDto {
  string id = 1;
  string name = 2;
  repeated RoleClaimDto claims = 3;
}

message RoleClaimDto {
  string type = 1;
  string value = 2;
}

service DoxatagService {
  rpc FetchDoxatags(FetchDoxatagsRequest) returns (FetchDoxatagsResponse);
}

message FetchDoxatagsRequest {
}

message FetchDoxatagsResponse {
  StatusDto status = 1;
  repeated DoxatagDto doxatags = 2;
}

message DoxatagDto {
  string name = 1;
  int32 code = 2;
}

message StatusDto {
  int32 code = 1;
  string message = 2;
  google.protobuf.Any details = 3;
}