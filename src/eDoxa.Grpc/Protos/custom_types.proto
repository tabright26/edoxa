syntax = "proto3";

option csharp_namespace = "eDoxa.Grpc.Protos.CustomTypes";

package edoxa.customTypes;

// Name "DecimalValue" prevents conflict with C# Decimal type
message DecimalValue {

  // The whole units of the amount.
  int64 units = 1;

  // Number of nano (10^-9) units of the amount.
  // The value must be between -999,999,999 and +999,999,999 inclusive.
  // If `units` is positive, `nanos` must be positive or zero.
  // If `units` is zero, `nanos` can be positive, zero, or negative.
  // If `units` is negative, `nanos` must be negative or zero.
  // For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
  int32 nanos = 2;
}

message FieldValidationRule {
  FieldValidationRuleType type = 1;
  string message = 2;
  string value = 3;
  bool enabled = 4;
  int32 order = 5;
}

enum FieldValidationRuleType {
  FIELD_VALIDATION_RULE_TYPE_NONE = 0;
  FIELD_VALIDATION_RULE_TYPE_REQUIRED = 1;
  FIELD_VALIDATION_RULE_TYPE_REGEX = 2;
  FIELD_VALIDATION_RULE_TYPE_LENGTH = 3;
  FIELD_VALIDATION_RULE_TYPE_MIN_LENGTH = 4;
  FIELD_VALIDATION_RULE_TYPE_MAX_LENGTH = 5;
  FIELD_VALIDATION_RULE_TYPE_ALL = -1;
}